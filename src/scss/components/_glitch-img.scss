// TODO: use math.div(random(10), 10) instead of random(10) / 10
// TODO: use clip instead of clip-path even if it's deprecated
// TODO: use setInterval on glitch animations so that they can be triggered via adding/removing class with a delay
@use 'sass:math';

.glitch-picture {
  &:not(.back) {
    position: absolute;
    top: 0;
    left: 0;
  }
}
.back {
  z-index: 4;
}
.front-3 {
  z-index: 3;
  // animation: img-glitch-3 750ms linear 1000ms infinite alternate-reverse;
  animation: glitch-animation-3 1500ms linear 1000ms infinite alternate-reverse;

  @media (prefers-reduced-motion) {
    animation: none;
  }
}
.front-2 {
  z-index: 2;
  animation: glitch-animation-3 1500ms linear 1000ms infinite alternate-reverse;

  @media (prefers-reduced-motion) {
    animation: none;
  }
}
.front {
  z-index: 1;
  animation: glitch-animation-3 1500ms linear 1000ms infinite alternate-reverse;

  @media (prefers-reduced-motion) {
    animation: none;
  }
}
@keyframes glitch-animation-3 {
  $steps: 20;
  // $steps: 3;

  @for $i from 0 through $steps {
    #{(math.div($i * 1%, $steps))} {
      clip-path: polygon(
        // top left
        0%
          (random(30) + 5) *
          1%,
        // top right
        100%
          (random(30) + 5) *
          1%,
        // bottom right
        0%
          (random(30) + 5) *
          1%,
        // bottom left
        0%
          (random(30) + 5) *
          1%
      );
      opacity: math.div(random(10), 10);
      top: random(2) - 2 * 1%;
      left: random(4) - 4 * 1%;
      // transform: translateX(random(5) - 5 * 1%);
    }
  }
}
// opacity: random(10) / 10;
// random(100) / 100 * 100% random(100) / 100 * 100%

@keyframes glitch-animation-2 {
}
@keyframes glitch-animation-1 {
  0% {
  }
}
